{"version":3,"file":"12d7aaea-0aca-4951-95d5-19693216eb38.mjs","sources":["../../../src/config/tokens.ts","../../../src/mastra/tools/market-data.ts"],"sourcesContent":["export const TOKEN_CONFIG = {\n  USDC: {\n    address: \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    decimals: 6,\n    coingeckoId: \"usd-coin\",\n    symbol: \"USDC\"\n  },\n  WETH: {\n    address: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n    decimals: 18,\n    coingeckoId: \"weth\",\n    symbol: \"WETH\"\n  },\n  WBTC: {\n    address: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\",\n    decimals: 8,\n    coingeckoId: \"wrapped-bitcoin\",\n    symbol: \"WBTC\"\n  }\n} as const;\n\nexport type TokenSymbol = keyof typeof TOKEN_CONFIG;\n\nexport const DEFAULT_PORTFOLIO_WEIGHTS = {\n  USDC: 0.20,\n  WETH: 0.50,\n  WBTC: 0.30\n} as const;","import { createTool } from \"@mastra/core/tools\";\nimport axios from \"axios\";\nimport { z } from \"zod\";\nimport { TOKEN_CONFIG } from \"../../config/tokens\";\nimport type { MarketData } from \"../../types/trading\";\n\nexport const fetchMarketData = createTool({\n  id: \"fetch-market-data\",\n  description: \"Fetch comprehensive market data including prices, volume, and trends\",\n  inputSchema: z.object({\n    symbols: z.array(z.string()).optional().default([\"USDC\", \"WETH\", \"WBTC\"]),\n    includeMetrics: z.boolean().optional().default(true)\n  }),\n  outputSchema: z.record(z.any()),\n  execute: async ({ context }) => {\n    const { symbols, includeMetrics } = context;\n    \n    try {\n      const coinIds = symbols.map(symbol => TOKEN_CONFIG[symbol as keyof typeof TOKEN_CONFIG]?.coingeckoId).filter(Boolean);\n      \n      const response = await axios.get(\"https://api.coingecko.com/api/v3/simple/price\", {\n        params: {\n          ids: coinIds.join(\",\"),\n          vs_currencies: \"usd\",\n          include_24hr_change: true,\n          include_24hr_vol: true,\n          include_market_cap: true\n        },\n        timeout: 10000\n      });\n\n      const marketData: Record<string, MarketData> = {};\n      \n      symbols.forEach(symbol => {\n        const config = TOKEN_CONFIG[symbol as keyof typeof TOKEN_CONFIG];\n        if (config && response.data[config.coingeckoId]) {\n          const data = response.data[config.coingeckoId];\n          marketData[symbol] = {\n            symbol,\n            price: data.usd || 0,\n            priceChange24h: data.usd_24h_change || 0,\n            volume24h: data.usd_24h_vol || 0,\n            marketCap: data.usd_market_cap || 0,\n            timestamp: Date.now()\n          };\n        }\n      });\n\n      return marketData;\n    } catch (error) {\n      console.error(\"Failed to fetch market data:\", error);\n      throw new Error(`Market data fetch failed: ${error}`);\n    }\n  }\n});\n\nexport const fetchPortfolioBalance = createTool({\n  id: \"fetch-portfolio-balance\",\n  description: \"Get current portfolio balances from Recall Network\",\n  inputSchema: z.object({}),\n  outputSchema: z.record(z.number()),\n  execute: async () => {\n    const { RECALL_API_URL, RECALL_API_KEY } = process.env;\n    \n    try {\n      const response = await axios.get(`${RECALL_API_URL}/api/balance`, {\n        headers: { Authorization: `Bearer ${RECALL_API_KEY}` },\n        timeout: 10000\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error(\"Failed to fetch portfolio balance:\", error);\n      throw new Error(`Portfolio balance fetch failed: ${error}`);\n    }\n  }\n});\n\nexport const executeAdvancedTrade = createTool({\n  id: \"execute-advanced-trade\",\n  description: \"Execute a sophisticated trade with risk management and position sizing\",\n  inputSchema: z.object({\n    fromToken: z.string().describe(\"Token to sell (contract address)\"),\n    toToken: z.string().describe(\"Token to buy (contract address)\"),\n    amount: z.string().describe(\"Amount in base units\"),\n    strategy: z.string().describe(\"Trading strategy being executed\"),\n    riskLevel: z.enum([\"LOW\", \"MEDIUM\", \"HIGH\"]).default(\"MEDIUM\"),\n    maxSlippage: z.number().optional().default(0.005)\n  }),\n  outputSchema: z.any(),\n  execute: async ({ context }) => {\n    const { fromToken, toToken, amount, strategy, riskLevel, maxSlippage } = context;\n    const { RECALL_API_URL, RECALL_API_KEY } = process.env;\n    \n    try {\n      const response = await axios.post(\n        `${RECALL_API_URL}/api/trade/execute`,\n        {\n          fromToken,\n          toToken,\n          amount,\n          reason: `${strategy} - Risk: ${riskLevel}, Max Slippage: ${maxSlippage * 100}%`\n        },\n        {\n          headers: { \n            Authorization: `Bearer ${RECALL_API_KEY}`,\n            \"Content-Type\": \"application/json\"\n          },\n          timeout: 30000\n        }\n      );\n      \n      return {\n        ...response.data,\n        executedAt: new Date().toISOString(),\n        strategy,\n        riskLevel\n      };\n    } catch (error) {\n      console.error(\"Trade execution failed:\", error);\n      throw new Error(`Trade execution failed: ${error}`);\n    }\n  }\n});"],"names":[],"mappings":"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"}